(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{578:function(t,a,e){"use strict";e.r(a);var s=e(13),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v('Vue 3.0 "One Piece" 终于在9月18日正式发布了，新版的Vue中最重要的一些特性有：')]),t._v(" "),e("ul",[e("li",[t._v("性能得到了显著的提升；")]),t._v(" "),e("li",[t._v("Composition API；")]),t._v(" "),e("li",[t._v("一个组件可以支持多个根元素；")]),t._v(" "),e("li",[t._v("Tree shaking，当一些功能不用的时候就不会打包到最终的代码里；")]),t._v(" "),e("li",[t._v("新的组件：Fragment、Teleport、Suspense；")])]),t._v(" "),e("p",[e("strong",[t._v("其中性能提升主要体现在：更新比vue2有1.3～2倍的提升、SSR有2～3倍的提升")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"做一个验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#做一个验证"}},[t._v("#")]),t._v(" 做一个验证")]),t._v(" "),e("p",[t._v("创建一个vue2项目和一个vue3项目, 分别加载有1万条数据点表格，点击shuffle按钮，打乱表格数据，计算更新时间，得到的结果如下：\n")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Vue2")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://note.youdao.com/yws/api/personal/file/WEBf3a6902d3c00948dd0b052be73b30473?method=download&shareKey=539e3697cd9e1a8ef7f60222ac2d0e25",alt:"image"}})]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Vue3")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://note.youdao.com/yws/api/personal/file/WEBbe6d27457b6c562dbf97d8de1040b163?method=download&shareKey=a5e6ba49dff1ac5845975268fb9f3585",alt:"image"}})]),t._v(" "),e("p",[t._v("比较两者的时间，更新的提升比较符合官方给出的范围。")]),t._v(" "),e("h2",{attrs:{id:"vue3是如何变快的呢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3是如何变快的呢"}},[t._v("#")]),t._v(" Vue3是如何变快的呢？")]),t._v(" "),e("ol",[e("li",[t._v("diff算法的优化")]),t._v(" "),e("li",[t._v("hoistStatic 静态提升")]),t._v(" "),e("li",[t._v("cacheHandlers 事件侦听器缓存")]),t._v(" "),e("li",[t._v("ssr渲染")])]),t._v(" "),e("h3",{attrs:{id:"_1-diff方法优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-diff方法优化"}},[t._v("#")]),t._v(" 1. diff方法优化")]),t._v(" "),e("p",[t._v("例如：下面的模板包含一个div，div内包含三个段落，其中前两个段落是静态固定不变的，而第三个段落的内容绑定的msg属性，当msg改变的时候，Vue会生成新的虚拟DOM然后和旧的进行对比。")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("这是段落1"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("这是段落2"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{msg}}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[e("strong",[t._v("vue2中虚拟Dom的所有节点都进行对比")]),t._v("。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://note.youdao.com/yws/api/personal/file/WEB03c829d4e25d9d295f68c112873697e6?method=download&shareKey=5b9cb69428891167ee3e2291b580906d",alt:"image"}})]),t._v(" "),e("p",[t._v("然而模板中div元素是固定不变的，前两个p元素也是固定不变的，可能变化的只是第3个p元素的文本，对所有元素进行对比没有必要。")]),t._v(" "),e("p",[e("strong",[t._v("vue3新增了静态标记（PatchFlag），在创建虚拟DOM的时候，如果节点会发生变化，就会加上静态标记， 然后对比的时候只比较带有Patchflag的节点。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://note.youdao.com/yws/api/personal/file/WEBf43f685319f3eb66c302f83de0b397f0?method=download&shareKey=572ae8742f60fbf9bd41f618eeea5ef5",alt:"image"}})]),t._v(" "),e("p",[t._v("Patchflag是个枚举，取值为1代表这个元素的文本是动态绑定的，取值为2代表元素的class是动态绑定的。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export const enum PatchFlags {\n  TEXT = 1,\n  CLASS = 1 << 1,\n  STYLE = 1 << 2,\n  PROPS = 1 << 3,\n  FULL_PROPS = 1 << 4,\n  HYDRATE_EVENTS = 1 << 5,\n  STABLE_FRAGMENT = 1 << 6,\n  KEYED_FRAGMENT = 1 << 7,\n  UNKEYED_FRAGMENT = 1 << 8,\n  NEED_PATCH = 1 << 9,\n  DYNAMIC_SLOTS = 1 << 10,\n  HOISTED = -1,\n  BAIL = -2\n }\n")])])]),e("h3",{attrs:{id:"_2-静态提升"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-静态提升"}},[t._v("#")]),t._v(" 2. 静态提升")]),t._v(" "),e("ul",[e("li",[t._v("vue2中无论元素是否参与更新，每次都会重新创建，然后再渲染。还是以刚才点模板为例，msg每次更新都会创建前两个p节点。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('import { createVNode as _createVNode, \n    toDisplayString as _toDisplayString, \n    openBlock as _openBlock, \n    createBlock as _createBlock } from "vue";\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock("div", null, [\n    _createVNode("p", null, "这是段落1"),\n    _createVNode("p", null, "这是段落2"),\n    _createVNode("p", null, _toDisplayString(_ctx.msg), 1 /* TEXT */)\n  ]))\n}\n')])])]),e("ul",[e("li",[t._v("vue3中对于不参与更新点元素，会做静态提升、只会被创建一次，在渲染时直接复用即可。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('import { createVNode as _createVNode, \n    toDisplayString as _toDisplayString, \n    openBlock as _openBlock, \n    createBlock as _createBlock } from "vue";\n\nconst _hoisted_1 = /*#__PURE__*/_createVNode("p", null, "这是段落1", -1 /* HOISTED */)\nconst _hoisted_2 = /*#__PURE__*/_createVNode("p", null, "这是段落2", -1 /* HOISTED */)\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock("div", null, [\n    _hoisted_1,\n    _hoisted_2,\n    _createVNode("p", null, _toDisplayString(_ctx.msg), 1 /* TEXT */)\n  ]))\n}\n')])])]),e("h3",{attrs:{id:"_3-事件侦听器缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-事件侦听器缓存"}},[t._v("#")]),t._v(" 3. 事件侦听器缓存")]),t._v(" "),e("p",[t._v("给元素绑定一个事件会被视为一个动态绑定，前面说过动态绑定会给它添加Patchflag，每次DOM比较点时候都会比较这个节点，但是事件绑定点函数都是同一个函数，所以不用追踪变化，直接缓存起来复用即可。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<div>\n    <button @click="onClick">提交</button>\n</div>\n')])])]),e("p",[t._v("没有缓存事件侦听器：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock("div", null, [\n    _createVNode("button", { onClick: _ctx.onClick }, "提交", 8 /* PROPS */, ["onClick"])\n  ]))\n}\n')])])]),e("p",[t._v("缓存了事件侦听器：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock("div", null, [\n    _createVNode("button", {\n      onClick: _cache[1] || (_cache[1] = (...args) => (_ctx.onClick(...args)))\n    }, "提交")\n  ]))\n}\n')])])]),e("h3",{attrs:{id:"_4-ssr渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-ssr渲染"}},[t._v("#")]),t._v(" 4. ssr渲染")]),t._v(" "),e("p",[t._v("当有大量静态内容的时候，这些内容会被当作纯字符串推进一个buffer里面，即使存在动态的绑定，会通过模板插值嵌入进去。这样会比通过虚拟DOM来渲染的快上很多。")]),t._v(" "),e("p",[t._v("当静态内容大到一定量级的时候，会用_createStaticVNode方法在客户端去生成一个static node，这些静态node，会被直接innerHtml， 就不需要再创建对象，然后根据对象渲染。")]),t._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[t._v("vue3通过优化diff算法减少了遍历成本，然后通过静态提升以及时间侦听器缓存减少了多次创建的开销，从而组件更新性的能得到了提升。")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://v3.vuejs.org/guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Vue3 Document》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.bilibili.com/video/BV14k4y117LL?p=4",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Vue3 正式版教程》李江南"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.yuque.com/woniuppp/vue3/fyi",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Vue3生态技术内幕》"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);