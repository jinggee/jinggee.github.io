(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{580:function(t,a,e){"use strict";e.r(a);var s=e(13),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("在讲Docker之前，我们先看一下以前是怎么发布部署我们的应用程序的。")]),t._v(" "),e("p",[t._v("通常我们需要先在服务器上安装ngix、node、mysql等应用程序运行所依赖的环境、之后再对他们进行配置（包括创建用户、配置参数等等），然后再将前端的构建生成的静态文件上传到服务器上。如果我们有多套环境（开发、测试、生产），那么每个环境上都要安装调试一遍这些基础应用，这些琐碎的操作极大的降低了用户的工作效率。")]),t._v(" "),e("h2",{attrs:{id:"docker与虚拟机的相比的优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker与虚拟机的相比的优势"}},[t._v("#")]),t._v(" Docker与虚拟机的相比的优势")]),t._v(" "),e("ul",[e("li",[t._v("Docker容器很快，启动和停止可以在妙级实现，而虚拟机则动辄几分钟；")]),t._v(" "),e("li",[t._v("Docker对系统资源的需求更少")]),t._v(" "),e("li",[t._v("通过类似 Git 设计理念的操作来方便用户获取、分发和更新应用镜像，==存储复用，增量更新==；")]),t._v(" "),e("li",[t._v("Docker 通过 Dockerfile ==支持灵活的自动化创建和部署机制==，以提高工作效率，并标准化流程。")])]),t._v(" "),e("p",[t._v("传统虚拟机运行N个不同的应用就要启动N个虚拟机，每个虚拟机都分配了独占的内存，磁盘，cpu。而Docker只需要启\n动N个很薄的容器，并将应用放到容器内，应用获得的是接近原生的性能。")]),t._v(" "),e("h2",{attrs:{id:"核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),e("p",[t._v("Docker有三个核心概念：")]),t._v(" "),e("h3",{attrs:{id:"镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像"}},[t._v("#")]),t._v(" 镜像")]),t._v(" "),e("h3",{attrs:{id:"容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[t._v("#")]),t._v(" 容器")]),t._v(" "),e("h3",{attrs:{id:"仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#仓库"}},[t._v("#")]),t._v(" 仓库")]),t._v(" "),e("h2",{attrs:{id:"镜像相关的常用操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像相关的常用操作"}},[t._v("#")]),t._v(" 镜像相关的常用操作")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("拉取一个镜像")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("语法： docker [image] pull [options] NAME[:TAG]\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker pull ubuntu:18.04\n// 获取一个ubuntu 18.04版本的基础镜像\n")])])]),e("p",[t._v("如果不加tag，则默认选择latest标签，即获取最新的镜像")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 从 Docker Hub Ubuntu 仓库下载一个最新版本的 Ubuntu 操作系统的镜像：\ndocker pull ubuntu\n")])])]),e("p",[t._v("严格的讲Name应该添加镜像仓库地址作为前缀，如果不加的话默认使用官方的Docker Hub服务")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker pull ubuntu:18.04\n\n// 相当于\n\ndocker pull registry.hub.docker.com/ubuntu:18.04 \n")])])]),e("p",[t._v("如果从非官方的仓库下载，则需要在仓库名称前指定完整的仓库地址。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker pull  registry.cn-beijing.aliyuncs.com/hyhy-aibox/ubuntu:18.04\n")])])]),e("p",[t._v("docker pull 子命令支持的选项：")]),t._v(" "),e("p",[t._v("--all-tags, -a = true|false, 是否获取仓库中的所有镜像，默认为否\n-－ disable-content-trust, 跳过镜像的内容校验，默认true")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("查看本地主机上已有的镜像")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker image ls  或者 docker images\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("REPOSITORY")]),t._v(" "),e("th",[t._v("TAG")]),t._v(" "),e("th",[t._v("IMAGE ID")]),t._v(" "),e("th",[t._v("CREATED")]),t._v(" "),e("th",[t._v("SIZE")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("myubuntu")]),t._v(" "),e("td",[t._v("1.0")]),t._v(" "),e("td",[t._v("93f41e1e6297")]),t._v(" "),e("td",[t._v("About an hour ago")]),t._v(" "),e("td",[t._v("56.6MB")])]),t._v(" "),e("tr",[e("td",[t._v("ubuntu")]),t._v(" "),e("td",[t._v("18.04")]),t._v(" "),e("td",[t._v("df8edc186894")]),t._v(" "),e("td",[t._v("6 days ago")]),t._v(" "),e("td",[t._v("56.6MB")])]),t._v(" "),e("tr",[e("td",[t._v("nginx")]),t._v(" "),e("td",[t._v("latest")]),t._v(" "),e("td",[t._v("eeb9db34b331")]),t._v(" "),e("td",[t._v("2 weeks ago")]),t._v(" "),e("td",[t._v("134MB")])])])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("使用tag命令添加镜像标签")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 添加一个新的mynginx:1.0标签\ndocker tag nginx:latest mynginx:1.0\n")])])]),e("p",[t._v("查看当前镜像, 本地镜像多了一个mynginx, tag是1.0， 注意imageid和ngix镜像的imageid相同")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("REPOSITORY")]),t._v(" "),e("th",[t._v("TAG")]),t._v(" "),e("th",[t._v("IMAGE ID")]),t._v(" "),e("th",[t._v("CREATED")]),t._v(" "),e("th",[t._v("SIZE")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mynginx")]),t._v(" "),e("td",[t._v("1.0")]),t._v(" "),e("td",[t._v("eeb9db34b331")]),t._v(" "),e("td",[t._v("2 weeks ago")]),t._v(" "),e("td",[t._v("134MB")])]),t._v(" "),e("tr",[e("td",[t._v("nginx")]),t._v(" "),e("td",[t._v("latest")]),t._v(" "),e("td",[t._v("eeb9db34b331")]),t._v(" "),e("td",[t._v("2 weeks ago")]),t._v(" "),e("td",[t._v("134MB")])])])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("搜索镜像")])])]),t._v(" "),e("p",[t._v("docker search子命令可以用来搜索官方Docker hub仓库中的镜像，语法为：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker search [option] keyword\n")])])]),e("p",[t._v("支持的选项：\n--limit int, 限制输出结果的个数，默认25个\n--format ring: 格式化输出内容；\n-f, --filter filter 过滤输出的内容")]),t._v(" "),e("p",[t._v("例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker search --filter is-official=true nginx\n\n# 搜索官方的nginx镜像\n")])])]),e("ul",[e("li",[e("strong",[t._v("删除镜像")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker rmi IMAGE 或者 docker image rm IMAGE\n")])])]),e("p",[t._v("其中IMAGE可以是标签，或者镜像ID，例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 根据镜像标签删除镜像\n\ndocker rmi ubuntu:latest\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 根据镜像id删除镜像\n\ndocker image rm 9f4877540c73\n")])])]),e("p",[t._v("支持的选项：")]),t._v(" "),e("p",[t._v("-f 强制删除，如果镜像创建的容器在运行时，镜像文件默认是无法删除的，通过-f参数可以强制删除。")]),t._v(" "),e("p",[t._v("-no-prune: 不要清理未带标签的父镜像。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("清理镜像")])])]),t._v(" "),e("p",[t._v("使用Docker一段事件后，系统中可能会残留一些临时的镜像文件，以及一些没有被使用的镜像，可以通过docker image prune命令清理")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker image prune\n")])])]),e("p",[t._v("支持的选项：")]),t._v(" "),e("p",[t._v("-a 删除所有无用的镜像")]),t._v(" "),e("p",[t._v("-f 强制清理")]),t._v(" "),e("p",[t._v("-filter filter 只清理符合指定过滤器的镜像")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("创建一个镜像")])])]),t._v(" "),e("p",[t._v("创建镜像有三种方式：基于已有镜像的容器创建、基于本地模板导入、基于dockerfile创建")]),t._v(" "),e("ol",[e("li",[t._v("基于已有的镜像容器创建")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker [container] commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]\n")])])]),e("p",[t._v("CONTAINER 为容器ID\n支持的选项有：")]),t._v(" "),e("p",[t._v('-a,--author="jingge" 作者信息\n-m,--message="1212" 提交信息')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("举例：先启动一个镜像，并在其中修改添加一个test文件\n\ndocker run -it ubuntu:18.04 /bin/bash\n\ntash test\n\nexit\n")])])]),e("p",[t._v("查看当前容器，id为a0631b9a1134")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker ps -a\n\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("CONTAINER ID")]),t._v(" "),e("th",[t._v("IMAGE")]),t._v(" "),e("th",[t._v("COMMAND")]),t._v(" "),e("th",[t._v("CREATED")]),t._v(" "),e("th",[t._v("STATUS")]),t._v(" "),e("th",[t._v("PORTS")]),t._v(" "),e("th",[t._v("NAMES")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("a0631b9a1134")]),t._v(" "),e("td",[t._v("ubuntu:18.04")]),t._v(" "),e("td",[t._v('"/bin/bash"')]),t._v(" "),e("td",[t._v("3 minutes ago")]),t._v(" "),e("td",[t._v("Exited (0) 3 minutes ago")]),t._v(" "),e("td",[t._v("determined_shirley")]),t._v(" "),e("td")])])]),t._v(" "),e("p",[t._v("运行下面命令，基于当前容器创建一个新的镜像")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('docker commit -a="jingge" -m="新增一个文件" a0631b9a1134 myubuntu:1.0\n')])])]),e("p",[t._v("查看本机上的镜像，已经有了我们刚才创建的镜像")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker ps -a\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("myubuntu")]),t._v(" "),e("th",[t._v("1.0")]),t._v(" "),e("th",[t._v("93f41e1e6297")]),t._v(" "),e("th",[t._v("6 seconds ago")]),t._v(" "),e("th",[t._v("56.6MB")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("ubuntu")]),t._v(" "),e("td",[t._v("18.04")]),t._v(" "),e("td",[t._v("df8edc186894")]),t._v(" "),e("td",[t._v("6 days ago")]),t._v(" "),e("td",[t._v("56.6MB")])])])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("基于dockerfile创建镜像\n创建一个Dockerfile文件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("FROM nginx\nRUN ...\n")])])]),e("p",[t._v("构建镜像")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker build -t mynginx:1.0  .\n\n# 注意最后的 . 代表本次执行的上下文路径\n")])])]),e("ul",[e("li",[e("strong",[t._v("镜像的导出和载入")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker [image] save [options]\n\n# 将镜像导出为本地文件\n")])])]),e("p",[t._v("支持的选项有：-o, -output, 举例：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker image save -o mynginx.tar nginx:latest\n\n# 将最新的nginx镜像导出到本地文件mynginx.tar\n")])])]),e("p",[t._v("之后，用户就可以通过复制 mynginx.tar文件将该镜像分享给他人。")]),t._v(" "),e("p",[t._v("镜像的载入：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker [image] load [options]\n")])])]),e("p",[t._v("选项有：-i或-input, 例如导入刚才的镜像文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker load -i mynginx.tar\n\n或者\n\ndocker load< mynginx.tar\n")])])]),e("ul",[e("li",[e("strong",[t._v("上传镜像")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker [image] push NAME[:TAG] ｜ [REGISTRY_HOST [: REGISTRY_PORT] /]NAME[:TAG]\n")])])]),e("p",[t._v("改命令可以将镜像上传到仓库中，默认上传到Docker hub官方仓库，需要登录。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ docker tag test:laest user/test:latest\n$ docker push user/test:latest\n\nThe push refers a repository [docker.io/user/test］\nSending image list \nPlease login prior push: \nUsername: \nPassword: \nEmail:\n\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);