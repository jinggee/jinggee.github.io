(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{581:function(t,a,n){"use strict";n.r(a);var o=n(13),e=Object(o.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),n("p",[t._v("关于location，举一个简单的例子：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("http {\n    server {\n        listen 80;\n            server_name www.jingge.com;\n            location / {\n                root /home/www/ts/;\n                index index.html;\n            }\n    }\n}\n")])])]),n("p",[t._v("大致意思是，当你访问 www.jingge.com的80端口的时候，返回home/www/ts/index.html文件。\n"),t._v("\n我们看下location的具体语法：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location [ = | ~ | ~* | ^~] uri {...}\n")])])]),n("p",[t._v("重点看方括号中的[ = | ~ | ~* | ^~] ，其中｜分割的内容，表示你可能用到的语法，其中：")]),t._v(" "),n("ul",[n("li",[t._v("= 表示精确匹配，例如：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('location = /test {\n    return 200 "hello"\n}\n\n# /test ok\n# /test/ not ok\n# /test2 not ok\n# /test/2 not ok\n')])])]),n("ul",[n("li",[t._v("~表示区分大小写的正则匹配，例如：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('location ～ ^/test$ {\n    return 200 "hello"\n}\n\n# /test ok\n# /Test not ok\n# /test/ not ok\n# /test2 not ok\n')])])]),n("ul",[n("li",[t._v("~*表示不区分大小写的正则匹配，例如：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location ~*  ^/test$ {\n    [configuration]\n}\n\n# /test ok\n# /Test ok\n# /test/ not ok\n# /test2 not ok\n")])])]),n("ul",[n("li",[t._v("^~表示uri以某个字符串开头")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location ^~ /images/  {\n    [configuration]\n}\n\n# /images/1.gif   ok\n")])])]),n("p",[t._v("而当你不使用这些语法，只写uri的时候：\n/ 表示通用匹配：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location / {     \n    [ configuration ] \n}\n\n# /index.html ok\n")])])]),n("p",[t._v("、")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location /test {\n    [ configuration ] \n}\n\n# /test ok\n# /test2 ok\n# /test/ ok\n")])])]),n("h2",{attrs:{id:"匹配顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#匹配顺序"}},[t._v("#")]),t._v(" 匹配顺序")]),t._v(" "),n("p",[t._v("location 的定义分为两种：")]),t._v(" "),n("ul",[n("li",[t._v("前缀字符串")]),t._v(" "),n("li",[t._v("正则表达式，具体为前面带 ～和～* 修饰符的")])]),t._v(" "),n("p",[t._v("匹配location的顺序为：")]),t._v(" "),n("ol",[n("li",[t._v("检查使用前缀字符串的locations，在使用前缀字符串的 locations 中选择最长匹配的，并将结果进行储存")]),t._v(" "),n("li",[t._v("如果符合带有 = 修饰符的 URI，则立刻停止匹配")]),t._v(" "),n("li",[t._v("如果符合带有 ^~ 修饰符的 URI，则也立刻停止匹配。")]),t._v(" "),n("li",[t._v("然后按照定义文件的顺序，检查正则表达式，匹配到就停止")]),t._v(" "),n("li",[t._v("当正则表达式匹配不到的时候，使用之前储存的前缀字符串")])]),t._v(" "),n("p",[t._v("再总结下：\n在优先级上，=修饰符最高， ^~次之，再者是正则，最后是前缀字符串匹配")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("server {\n    location /doc {\n        [ configuration A ] \n    }\n    location /docu {\n        [ configuration B ] \n    }\n}\n\n# 请求 /document 使用 configuration B\n# 虽然 /doc 也能匹配到，但在顺序上，前缀字符串顺序不重要，按照匹配长度来确定\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("server {\n    location ~ ^/doc {\n        [ configuration A ] \n    }\n    location ~ ^/docu {\n        [ configuration B ] \n    }\n}\n\n# 请求 /document 使用 configuration A\n# 虽然 ~ ^/docu 也能匹配到，但正则表达式则按照定义顺序\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("server {\n    location ^~ /doc {\n        [ configuration A ] \n    }\n    location ~ ^/docu {\n        [ configuration B ] \n    }\n}\n\n# 请求 /document 使用 configuration A\n# 虽然 ~ ^/docu 也能匹配到，但 ^~ 的优先级更高\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("server {\n    location /document {\n        [ configuration A ] \n    }\n    location ~ ^/docu {\n        [ configuration B ] \n    }\n}\n\n# 请求 /document 使用 configuration B\n# 虽然 /document 也能匹配到，但正则的优先级更高\n")])])]),n("h2",{attrs:{id:"root和alias的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#root和alias的区别"}},[t._v("#")]),t._v(" root和alias的区别")]),t._v(" "),n("p",[t._v("当我们这样设置 root 的时候：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location /i/ {\n    root /data/w3;\n}\n")])])]),n("p",[t._v("当请求 /i/top.gif ，/data/w3/i/top.gif 会被返回。")]),t._v(" "),n("p",[t._v("当我们这样设置 alias 的时候：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location /i/ {\n    alias /data/w3/images/;\n}\n")])])]),n("p",[t._v("当请求 /i/top.gif ，/data/w3/images/top.gif 会被返回。")]),t._v(" "),n("p",[t._v("乍一看两者很像，但细一看，就能看出两者的区别，root 是直接拼接 root + location 而 alias 是用 alias 替换 location，所以 root 中最后的路径里有 /i/，而 alias 中最后的路径里没有 /i/ 。")]),t._v(" "),n("p",[t._v("所以如果你这样使用 allias 定义一个路径：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location /images/ {\n    alias /data/w3/images/;\n}\n")])])]),n("p",[t._v("其实使用 root 会更好：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location /images/ {\n    root /data/w3;\n}\n")])])]),n("h2",{attrs:{id:"server-和-location-中的-root"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#server-和-location-中的-root"}},[t._v("#")]),t._v(" server 和 location 中的 root")]),t._v(" "),n("p",[t._v("server 和 location 中都可以使用 root，举个例子：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("http { \n  server {\n      listen 80;\n        server_name www.yayujs.com;\n        root /home/www/website/;\n        location / {\n          root /home/www/ts/;\n          index index.html;\n        }\n  }\n}\n")])])]),n("p",[t._v("如果两者都出现，是怎样的优先级呢？")]),t._v(" "),n("p",[t._v("简单的来说，就是就近原则，如果 location 中能匹配到，就是用 location 中的 root 配置，忽略 server 中的 root，当 location 中匹配不到的时候，则使用 server 中的 root 配置")])])}),[],!1,null,null,null);a.default=e.exports}}]);